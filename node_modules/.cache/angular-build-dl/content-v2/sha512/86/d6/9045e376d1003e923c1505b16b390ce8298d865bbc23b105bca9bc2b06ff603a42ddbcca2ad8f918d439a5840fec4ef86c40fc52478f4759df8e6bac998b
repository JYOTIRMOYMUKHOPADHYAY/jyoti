{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/components/dashboard-cards/dashboard-cards.component.ts","./src/app/components/dashboard-cards/dashboard-cards.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/map/map.component.ts","./src/app/components/map/map.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/corona-service.service.ts","./src/app/services/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { MapComponent} from \"./components/map/map.component\"\n\n\nconst routes: Routes = [\n\n  { path: \"\", component: HomeComponent },\n  {path: \"countries\", component: CountriesComponent },\n  {path : \"map\", component: MapComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'corona';\n}\n","\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardCardsComponent } from './components/dashboard-cards/dashboard-cards.component' ;\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MapComponent } from './components/map/map.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardsComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data : GlobalDataSummary[];\n  countries : string[] = [];\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  dataTable = [];\n  selectedCountryData : DateWiseData[];\n  dateWiseData;\n  chart = {\n    LineChart: \"LineChart\",\n    height : 500,\n    options : {\n      animation : {\n        duration : 1000,\n        easing : \"out\"\n      },\n      is3D: true\n    }\n  }\n \n\n  constructor(private service : DataServiceService) { }\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result =>{\n          this.dateWiseData = result;\n          \n        })\n      ),\n      this.service.getGlobalData().pipe(\n        map((result: GlobalDataSummary[])  =>{\n          this.data = result;\n          this.data.forEach(cs => {\n            this.countries.push(cs.country);\n          })\n        })\n      )\n    ).subscribe(\n      {\n        complete: () => {\n         this.updateValues(\"Afghanistan\");\n        }\n      }\n    )\n  }\n\n\nupdateChart(){\n  this.dataTable = [];\n  // dataTable.push([\"Date\", \"Cases\"])\n  this.selectedCountryData.forEach(cs => {\n    this.dataTable.push([cs.date, cs.cases])\n  })\n}\n\nupdateValues(country : string) {\n  console.log(country);\n  this.data.forEach(cs => {\n    if(cs.country == country) {\n      this.totalActive = cs.active;\n      this.totalConfirmed = cs.confirmed;\n      this.totalDeaths = cs.deaths;\n      this.totalRecovered = cs.recovered;\n    }\n  })\n\n  this.selectedCountryData = this.dateWiseData[country]\n  this.selectedCountryData.reverse()\n  this.updateChart();\n  }\n\n}","<app-navbar></app-navbar>\n  <div class=\"container-fluid\">\n   \n    <div class=\"row\">\n      <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n        <div class=\"sidebar-sticky pt-3\">\n          <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                <span data-feather=\"home\"></span>\n                Dashboard <span class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/countries\">\n                <span data-feather=\"file\"></span>\n               World \n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/map\">\n                <span data-feather=\"users\"></span>\n                India\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                <span data-feather=\"bar-chart-2\"></span>\n                Reports\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                <span data-feather=\"layers\"></span>\n                Integrations\n              </a>\n            </li>\n          </ul>\n  \n      \n        </div>\n      </nav>\n  \n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n\n          <div class=\"col\">\n             <div class=\"row\">\n                 <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)= \"updateValues(input.value)\">\n              <option value=\"{{con}}\" *ngFor=\"let con of countries\">{{ con }}</option>\n            </select>\n          </div>\n          </div>\n     \n          <div class=\"row\">\n              <app-dashboard-cards [totalConfirmed] = \"totalConfirmed\"  [totalActive] = \"totalActive\" \n          [totalRecovered] = \"totalRecovered\" [totalDeaths] = \"totalDeaths\"></app-dashboard-cards>\n         \n          </div>\n        \n          </div>\n         \n        </div>\n  \n        <google-chart [type]=\"chart.LineChart\" [data]=\"dataTable\" [height]=\"chart.height\" style=\"width: 100%\" [options]=\"chart.options\"></google-chart>\n  \n        \n     \n<div class=\"limiter\">\n  <div class=\"container-table100\">\n  <div class=\"wrap-table100\">\n  <div class=\"table100 ver1 m-b-110\">\n  <div class=\"table100-head\">\n  <table>\n  <thead>\n  <tr class=\"row100 head\">\n  <th class=\"cell100 column1\">#</th>\n  <th class=\"cell100 column2\">Date</th>\n  <th class=\"cell100 column3\">Cases</th>\n  </tr>\n  </thead>\n  </table>\n  </div>\n  <div class=\"table100-body js-pscroll\" *ngFor=\"let cs of selectedCountryData; index as i\">\n  <table>\n  <tbody>\n  <tr class=\"row100 body\" >\n  <td class=\"cell100 column1\">{{ i + 1}}</td>\n  <td class=\"cell100 column2\">{{cs.date | date}}</td>\n  <td class=\"cell100 column3\">{{cs.cases}}</td>\n  \n  </tr>\n  </tbody>\n  </table>\n  </div>\n  </div>\n  </div>\n  </div>\n  </div>\n      </main>\n    </div>\n  </div>\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-cards',\n  templateUrl: './dashboard-cards.component.html',\n  styleUrls: ['./dashboard-cards.component.css']\n})\nexport class DashboardCardsComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n\n  @Input('totalDeaths')\n  totalDeaths;\n\n  @Input('totalActive')\n  totalActive;\n\n  @Input('totalRecovered')\n  totalRecovered;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <div class=\"card\" style=\"width: 18rem;\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Total Confirmed</h5>  \n              <h1 class=\"card-title\">{{totalConfirmed}}</h1>    \n            </div>\n          </div>\n        </div>\n        \n       <hr>\n       <div class=\"col-md-3\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Total Recovered</h5>  \n            <h1 class=\"card-title\">{{totalRecovered}}</h1>     \n          </div>\n        </div>\n        </div>\n       <hr>\n       <div class=\"col-md-3\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Total Deaths</h5> \n            <h1 class=\"card-title\">{{totalDeaths}}</h1>      \n          </div>\n        </div>\n        </div>\n       <hr>\n       <div class=\"col-md-3\">\n       <div class=\"card\" style=\"width: 18rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Total Active</h5> \n          <h1 class=\"card-title\">{{totalActive}}</h1>      \n        </div>\n      </div>\n      </div>\n      </div>\n     \n    </div>\n  ","import { Component, OnInit, Input } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  globalData : GlobalDataSummary[];\n  datatable = [];\n  chart = {\n    PieChart :\"PieChart\",\n    ColumnChart: \"ColumnChart\",\n   BarChart: \"BarChart\",\n    height : 500,\n    \n    options : {\n      animation : {\n        duration : 1000,\n        easing : \"out\"\n      },\n      is3D: true\n    }\n  }\n  constructor(private dataService : DataServiceService) { }\n\n\n  initChart(caseType : string) {\n\n    this.datatable = [];\n    // this.datatable.push([\"Country\", \"Cases\"]);\n\n    this.globalData.forEach(cs => {\n      let value : number ;\n      if(caseType == \"c\")\n        if(cs.confirmed > 200000) \n         value = cs.confirmed;\n      \n         console.log(caseType)\n\n      if(caseType == \"a\") \n         if(cs.active > 2000) \n       value = cs.active;\n    \n\n    if(caseType == \"d\")\n      if(cs.deaths > 20000) \n     value = cs.deaths;\n    \n \n\n  if(caseType == \"r\") \n    if(cs.recovered > 2000) \n   value = cs.recovered;\n\n\n  this.datatable.push([\n  cs.country , value\n    ]);\n   \n    })\n\n  \n  }\n\n  ngOnInit(): void {\n\n    this.dataService.getGlobalData()\n    .subscribe(\n      {\n        next : (result) => {\n          console.log(result);\n          this.globalData = result;\n          result.forEach(cs => {\n            if(!Number.isNaN(cs.confirmed)) {\n              this.totalActive += cs.active;\n              this.totalConfirmed += cs.confirmed;\n              this.totalDeaths += cs.deaths;\n              this.totalRecovered += cs.recovered;\n            }\n          \n          })\n\n          this.initChart(\"d\");\n        \n        }\n      }\n    )\n  }\n\n  updateChart(input: HTMLInputElement) {\n    console.log(input.value);\n \n    this.initChart(input.value);\n  }\n}\n","\n    <app-navbar></app-navbar>\n    <div class=\"container\">\n      <div class=\"row\">\n        <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style=\"background-color: #79C3ED !important;\">\n          <div class=\"sidebar-sticky pt-3\">\n            <ul class=\"nav flex-column\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link active\" href=\"#\">\n                  <span data-feather=\"home\"></span>\n                  Dashboard <span class=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"countries\">\n                  <span data-feather=\"file\"></span>\n                 World\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\"  routerLink=\"map\">\n                  <span data-feather=\"shopping-cart\"></span>\n                  India\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  <span data-feather=\"users\"></span>\n                  Customers\n                </a>\n              </li>\n            \n            </ul>\n    \n          \n          </div>\n        </nav>\n    \n        <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n          <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">Dashboard</h1>\n            <div class=\"container\">\n              \n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" value=\"c\" #c (click)=\"updateChart(c)\" name=\"casetype\" id=\"c\" >\n                                <label class=\"form-check-label\" for=\"c\">\n                                  Confirmed\n                                </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                   <input class=\"form-check-input\" type=\"radio\" value=\"d\" #d (click)=\"updateChart(d)\" name=\"casetype\" id=\"d\" >\n                                <label class=\"form-check-label\" for=\"d\">\n                                 Deaths\n                                </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                   <input class=\"form-check-input\" type=\"radio\" value=\"r\" #r (click)=\"updateChart(r)\" name=\"casetype\" id=\"r\" >\n                                <label class=\"form-check-label\" for=\"r\">\n                                  Recovered\n                                </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"radio\" value=\"a\" #a (click)=\"updateChart(a)\" name=\"casetype\" id=\"a\" >\n                                <label class=\"form-check-label\" for=\"a\">\n                                 Active\n                                </label>\n                </div>      \n              </div>\n            <!-- <div class=\"btn-toolbar mb-2 mb-md-0\">\n              <div class=\"btn-group mr-2\">\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Share</button>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Export</button>\n              </div>\n              <button type=\"button\" class=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n                <span data-feather=\"calendar\"></span>\n                This week\n              </button>\n            </div> -->\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 col-xl-6\">\n                <google-chart [type]=\"chart.BarChart\" [data]=\"datatable\" [height]=\"chart.height\" class=\"my-4 w-100\" id=\"myChart\" width=\"100%\" height=\"100%\" [options]=\"chart.options\"></google-chart>\n              </div>\n              <div class=\"col-lg-12 col-xl-6\">\n                  <google-chart [type]=\"chart.PieChart\" [data]=\"datatable\" [height]=\"chart.height\" class=\"my-4 w-100\" id=\"myChart\" width=\"700\" height=\"380\" [options]=\"chart.options\"></google-chart>\n       \n              </div>\n            </div>\n          \n          </div>\n         \n\n             <app-dashboard-cards [totalConfirmed] = \"totalConfirmed\"  [totalActive] = \"totalActive\" \n             [totalRecovered] = \"totalRecovered\" [totalDeaths] = \"totalDeaths\"></app-dashboard-cards>\n  \n        </main>\n      </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { CoronaServiceService } from 'src/app/services/corona-service.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  showArrows = {\n    uparrowState: false,\n    downarrowState: false,\n    downarrowConfirmed:false,\n    uparrowowConfirmed:false,\n    downarrowActive:false,\n    uparrowActive:false,\n    downarrowRecovered:false,\n    uparrowRecovered:false,\n    downarrowDeath:false,\n    uparrowDeath:false,\n}\nshowDistrict:boolean=false\n  sortedDataBasedOnDate\n\n\n  private isAscendingSort: boolean = false;\n\n  DailystateStatus: Array<any> = [{ state: '', confirmed: '', recovered: '', deaths: '', active: '' }];\n  DailyStatus: any = { total: '' }\n  statewisedata: Array<any> = [{ state: '', confirmed: '', recovered: '', deaths: '', active: '' }];\n  statewisecase: any = { confirmed: '', active: '', recovered: '', deaths: '' }\n  startdate = new Date()\n  lastupdateddate = new Date();\n  lastupdated: any = { hour: 0, minute: 0, second: 0 }\n  SingleStateData\n  lastrefreshedtime: any;\n\n\n  constructor(private cs: CoronaServiceService) { }\n\n  ngOnInit(): void {\n\n    this.getStateWise()\n    this.testData()\n  \n  }\n\n\n\n  testData() {\n    this.cs.getDailyCaseStatus().subscribe(\n      response => {\n        this.sortedDataBasedOnDate = response.data.history\n        this.sortByMaxCases(this.sortedDataBasedOnDate)\n       \n      //  console.log(this.sortedDataBasedOnDate);\n        this.calculateDiff(this.sortedDataBasedOnDate)\n        this.statewisedata = this.sortedDataBasedOnDate[this.sortedDataBasedOnDate.length - 1].statewise\n        this.statewisecase= this.sortedDataBasedOnDate[this.sortedDataBasedOnDate.length - 1].total\n       // console.log(this.statewisecase)\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  calculateDiff(data) {\n    let x = data\n    let last: any = x[x.length - 1];\n    let last2: any = x[x.length - 2];\n\n    function calculate(schema1, schema2) {\n      var ret = {};\n      for (var key in schema1) {\n        if (schema1.hasOwnProperty(key) && schema2.hasOwnProperty(key)) {\n          var obj = schema1[key];\n          var obj2 = schema2[key]\n          if (typeof obj === \"number\" && !isNaN(obj) && typeof obj2 === \"number\" && !isNaN(obj2)) {\n            ret[key] = obj - obj2;\n          }\n          else {\n            if (typeof obj === 'object' && typeof obj2 === 'object') {\n              ret[key] = calculate(obj, obj2);\n            }\n            else {\n              ret[key] = obj;\n            }\n          }\n        }\n      }\n      return ret;\n    }\n    let test = calculate(last, last2);\n    this.DailyStatus = test;\n    this.DailystateStatus = this.DailyStatus.statewise\n  }\n\n\n\n\n\n\n\n  getStateWise() {\n    this.cs.getDataStateWise().subscribe(data => {\n    this.lastrefreshedtime=data.data.lastRefreshed   \n      this.lastupdateddate = data.data.lastRefreshed\n     // console.log(this.lastupdated)\n\n      function getDataDiff(startDate, endDate) {\n        var diff = endDate.getTime() - startDate.getTime();\n        var days = Math.floor(diff / (60 * 60 * 24 * 1000));\n        var hours = Math.floor(diff / (60 * 60 * 1000)) - (days * 24);\n        var minutes = Math.floor(diff / (60 * 1000)) - ((days * 24 * 60) + (hours * 60));\n        var seconds = Math.floor(diff / 1000) - ((days * 24 * 60 * 60) + (hours * 60 * 60) + (minutes * 60));\n        return { day: days, hour: hours, minute: minutes, second: seconds };\n      }\n\n      this.lastupdated = getDataDiff(new Date(this.lastupdateddate), new Date(this.startdate));\n      console.log(this.lastupdated)\n    },\n      err => {\n        console.log(err)\n      })\n  }\n\n  OngetState(state) {\n\n  this.getDataofState(state)\n\n    this.cs.getState(state)\n    this.cs.getDataDistrictWise(state)\n \n  }\n  getDataofState(state: any) {\n   // console.log(this.statewisedata)\n   const f = this.statewisedata.filter(a => a.state==state);\n    this.SingleStateData=f[0]\n    console.log();\n  }\n\n  showHideData(data) {\n    if(data && data['show'] == true) {\n      data['show'] = false;\n    } else {\n      data['show'] = true;\n    }\n  }\n\n  sortAscending(data) {\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowState=!this.showArrows.uparrowState\n    \n    data.forEach(item => item.statewise.sort(function (a, b) {\n      if (a.state < b.state) {\n        return -1;\n      }\n      if (a.state > b.state) {\n        return 1;\n      }\n      return 0;\n    }))\n\n\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n      this.showArrows.downarrowState=!this.showArrows.downarrowState\n      let a = data.forEach(item => item.statewise.sort(function (a, b) {\n      \n      if (b.state < a.state) {\n        return -1;\n      }\n      if (b.state > a.state) {\n        return 1;\n      }\n      return 0;\n    }))\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n  }\n  resetArrows() {\n    this.showArrows = {\n      uparrowState: false,\n      downarrowState: false,\n      downarrowConfirmed:false,\n      uparrowowConfirmed:false,\n      downarrowActive:false,\n      uparrowActive:false,\n      downarrowRecovered:false,\n      uparrowRecovered:false,\n      downarrowDeath:false,\n      uparrowDeath:false,\n  }\n    \n  }\n\n  sortByMaxCases(sortedDataBasedOnDate) {\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.downarrowConfirmed=!this.showArrows.downarrowConfirmed\n\n\n \n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n      if (b.confirmed < a.confirmed) {\n        return -1;\n      }\n      if (b.confirmed > a.confirmed) {\n        return 1;\n      }\n      return 0;\n    }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n     this.showArrows.uparrowowConfirmed=!this.showArrows.uparrowowConfirmed\n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (a.confirmed < b.confirmed) {\n          return -1;\n        }\n        if (a.confirmed > b.confirmed) {\n          return 1;\n        }\n        return 0;\n      }))\n\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n  }\n\n  sortByMaxActive(sortedDataBasedOnDate) {\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowActive=!this.showArrows.uparrowActive\n   \n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n      if (a.active < b.active) {\n        return -1;\n      }\n      if (a.active > b.active) {\n        return 1;\n      }\n      return 0;\n    }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n     this.showArrows.downarrowActive=!this.showArrows.downarrowActive\n\n      sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (b.active < a.active) {\n          return -1;\n        }\n        if (b.active > a.active) {\n          return 1;\n        }\n        return 0;\n      }))\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n\n  }\n\n  sortByMaxRecovered(sortedDataBasedOnDate) {\n\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowRecovered=!this.showArrows.uparrowRecovered\n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n      if (b.recovered < a.recovered) {\n        return -1;\n      }\n      if (b.recovered > a.recovered) {\n        return 1;\n      }\n      return 0;\n    }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n\n      this.resetArrows()\n     this.showArrows.downarrowRecovered=!this.showArrows.downarrowRecovered\n      sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (a.recovered < b.recovered) {\n          return -1;\n        }\n        if (a.recovered > b.recovered) {\n          return 1;\n        }\n        return 0;\n      }))\n\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n\n  }\n\n  sortByMaxDeath(sortedDataBasedOnDate) {\n    \n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowDeath=!this.showArrows.uparrowDeath\n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n     \n    if (a.deaths < b.deaths) {\n      return -1;\n    }\n    if (a.deaths > b.deaths) {\n      return 1;\n    }\n    return 0;\n  }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n         this.showArrows.downarrowDeath=!this.showArrows.downarrowDeath\n      sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (b.deaths < a.deaths) {\n          return -1;\n        }\n        if (b.deaths > a.deaths) {\n          return 1;\n        }\n        return 0;\n      }))\n  \n  \n\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n\n  }\n}\n","\n<div class=\"limiter\">\n    <div class=\"container-table100\">\n        <a href=\"/\" class=\"btn btn-secondary\"> <i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\n        <div class=\"container\" style=\"animation-delay: 3s; \">\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <h5>Confirmed</h5>\n                    <h4 class=\"text-warning\">[+{{DailyStatus.total.confirmed}}]</h4>\n                    <h1>{{statewisecase.confirmed}} </h1>\n                </div>\n                <div class=\"col-md-3\">\n                    <h5 class=\"heading \">Active</h5>\n                    <h4 class=\"text-white\">[+{{DailyStatus.total.active}}]</h4>\n                    <h1 class=\"title has-text-info \">{{statewisecase.active}}</h1>\n                </div>\n                <div class=\"col-md-3\">\n                    <h5 class=\"heading \">Recovered</h5>\n                    <h4  class=\"text-white\">[+{{DailyStatus.total.recovered}}]</h4>\n                    <h1 class=\"title has-text-success \">{{statewisecase.recovered}} </h1>\n                </div>\n                <div class=\"col-md-3\">\n                    <h5 class=\"heading \">Death</h5>\n                    <h4  class=\"text-warning\">[+{{DailyStatus.total.deaths}}]</h4>\n                    <h1 class=\"title has-text-grey \">{{statewisecase.deaths}}</h1>\n                </div>\n                <div class=\"pt-5\">\n                    <h5 class=\"affected-count fadeInUp \" style=\"animation-delay: 1s; \">28 States/UTS Affected</h5>\n              </div>\n            </div>\n\n        </div>\n\n       \n     \n<div class=\"wrap-table100\">\n    <div class=\"table100\">\n        <table style=\"animation-delay: 1s; \">\n            <thead>\n                <tr class=\"table100-head\">\n                    <th (click)=\"sortAscending(sortedDataBasedOnDate) \" class=\"column1 text-center\">\n                        <div class=\"heading-content \"><abbr title=\"State \">State/UT</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowState , 'up-arrow' : showArrows.uparrowState} \"></div>\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxCases(sortedDataBasedOnDate) \" class=\"column2 text-center\">\n                        <div class=\"heading-content \"><abbr class=\"confirmed \" title=\"Confirmed \">Confirm</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowConfirmed , 'up-arrow' : showArrows.uparrowowConfirmed} \"></div>\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxActive(sortedDataBasedOnDate) \" class=\"column3 text-center\">\n                        <div class=\"heading-content \"><abbr class=\"active-cases \" title=\"Active \">Active</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowActive , 'up-arrow' : showArrows.uparrowActive} \"></div>\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxRecovered(sortedDataBasedOnDate) \" class=\"column4 text-center\">\n                        <div class=\"heading-content \"><abbr class=\" recovered\" title=\"Recovered \">Recover</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowRecovered , 'up-arrow' : showArrows.uparrowRecovered} \"></div>\n\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxDeath(sortedDataBasedOnDate) \" class=\"column5 text-center\">\n                        <div class=\"heading-content \"><abbr class=\"death\" title=\"Deaths \">Death</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowDeath , 'up-arrow' : showArrows.uparrowDeath} \"></div>\n                        </div>\n                    </th>\n                    <th class=\"column6 text-center\">Last Update</th>\n                </tr>\n            </thead>\n\n\n            <tbody *ngFor=\"let data of statewisedata;let i=index \">\n                <span class=\"dropdown rotateDownRight \"><svg xmlns=\"http://www.w3.org/2000/svg \" width=\"24 \" height=\"24 \" viewBox=\"0 0 24 24 \" fill=\"none \" stroke=\"currentColor \" stroke-width=\"2 \" stroke-linecap=\"round \" stroke-linejoin=\"round\n                        \"><polyline points=\"6 9 12 15 18 9 \"></polyline></svg></span>\n\n                <tr>\n                    <td (click)=\"OngetState(data.state); showHideData(data) \" class=\"column1\">{{data.state}}</td>\n\n\n\n\n                    <td class=\"column2\">\n\n                        <span *ngIf='DailystateStatus[i].confirmed !==0 && DailystateStatus[i].confirmed > 0 ;' class=\"deltas \" style=\"color: rgb(255, 7, 58); \"><svg xmlns=\"http://www.w3.org/2000/svg \" width=\"24 \" height=\"24 \" viewBox=\"0 0 24 24\n                        \" fill=\"none \" stroke=\"currentColor \" stroke-width=\"2 \" stroke-linecap=\"round \" stroke-linejoin=\"round \"><line x1=\"12 \" y1=\"19 \" x2=\"12 \" y2=\"5 \"></line><polyline points=\"5 12 12 5 19 12 \"></polyline>\n                                </svg>    {{DailystateStatus[i].confirmed}}</span> {{data.confirmed}}\n                    </td>\n\n\n                    <td class=\"column3 text-center\">{{data.active}}</td>\n                    <td class=\"column4 text-center\">{{data.recovered}}</td>\n                    <td class=\"column5 text-center\">{{data.deaths}}</td>\n                    <td class=\"column5 text-center\">\n                        <div class=\"last-update col-md-5 align-center\">\n                        \n                            <p class=\"difference-time\" style=\" color: #0bb332fa; font-weight: 600; \" *ngIf='lastupdated.hour==0; else elseBlock'> {{lastupdated.minute}} minutes </p>\n                            <ng-template #elseBlock>{{lastupdated.hour}} hour {{lastupdated.minute}} minutes ago</ng-template>\n                           \n                        </div>\n                    </td>\n\n                </tr>\n\n\n                <tr class=\"nohover\" app-district *ngIf=\"data[ 'show'] \"></tr>\n\n            </tbody>\n\n        </table>\n\n        </div>\n        </div>\n       \n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n\n\n    <nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n      <a class=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"/\">Home</a>\n      <button class=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n      <ul class=\"navbar-nav px-3\">\n        <li class=\"nav-item text-nowrap\">\n          <a class=\"nav-link\" href=\"#\">Sign out</a>\n        </li>\n      </ul>\n    </nav>\n    ","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoronaServiceService {\n\n  data1\n  state\n  district\n  BannerData: BehaviorSubject<any> = new BehaviorSubject('')\n  districtdata: Subject<any> = new Subject<any>();\n\n  url_statewise = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise'\n  url_dailycases = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise/history'\n  ulr_districtwise = \"https://api.covid19india.org/state_district_wise.json\"\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n\n    this.getDataStateWise()\n    \n  }\n\n  getDataStateWise(): Observable<any> {\n    return this.http.get(this.url_statewise)\n  }\n\n getDailyCaseStatus(): Observable<any> {\n    return this.http.get(this.url_dailycases)\n  }\n\n  getState(state) {\n    this.state = state\n  }\n\n  getDataDistrictWise(state) {\n    this.http.get(this.ulr_districtwise).subscribe(data => {\n      this.data1 = data\n    //  console.log(this.data1)\n    //  console.log(this.data1[state])\n      this.district = this.data1[state].districtData\n    //  console.log(state)\n      this.districtdata.next(this.district)\n    }\n    )\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators'; \nimport { GlobalDataSummary } from '../models/global-data';\nimport { DateWiseData } from '../models/date-wise-data';\nimport { chainedInstruction } from '@angular/compiler/src/render3/view/util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n    private baseURL = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/\";\n    private  globalDataUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/\";\n    private extension = \".csv\"\n    private dateWiseDataUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\n    month;\n    date;\n    year;\n\n    getDate(date : number){\n      if(date < 10) {\n        \n        return '0' + date;\n      }\n      return date;\n    }\n\n\n  constructor(private http : HttpClient ) { \n    let now = new Date();\n    this.month = now.getMonth() + 1;\n    this.date = now.getDate() ;\n    this.year = now.getFullYear();\n\n    console.log({\n      date : this.date,\n      month : this.month,\n      year : this.year\n    })\n    \n    this.globalDataUrl = `${this.globalDataUrl}${this.getDate(this.month)}-${this.getDate(this.date)}-${this.year}${this.extension}`\n    console.log(this.globalDataUrl)\n  }\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseDataUrl, {responseType : \"text\"})\n    .pipe(map(result => {\n      let rows = result.split('\\n');\n      \n      let mainData = {};\n      let header = rows[0]\n      let dates = header.split(/,(?=\\S)/);\n      \n      dates.splice(0, 4);\n      rows.splice(0, 1)\n\n     rows.forEach(row => {\n       let cols = row.split(/,(?=\\S)/);\n       let con = cols[1];//\n       cols.splice(0, 4);\n       mainData[con] = [];\n       cols.forEach((value , index) => {\n         let dw : DateWiseData = {\n           cases: +value,\n           country : con,\n           date : new Date(Date.parse(dates[index]))\n         }\n         mainData[con].push(dw)\n       })\n     })\n    //  console.log(mainData)\n      return mainData;\n    }))\n   }\n  getGlobalData() {\n    return this.http.get(this.globalDataUrl, {responseType : 'text'}).pipe(\n      map(result => {\n        let data: GlobalDataSummary[] = [];\n        let raw = {}\n        let rows = result.split('\\n');\n        rows.splice(0, 1)\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n        \n          let cs = {\n            country : cols[3],\n            confirmed : +cols[7],\n            deaths : +cols[8],\n            recovered : +cols[9],\n             active : +cols[10]\n          };\n          let temp : GlobalDataSummary = raw[cs.country];\n          if(temp){\n            temp.active = cs.active + temp.active;\n            temp.confirmed = cs.confirmed + temp.confirmed\n            temp.deaths = cs.deaths + temp.deaths\n            temp.recovered = cs.recovered + temp.recovered\n          \n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n        \n        })\n       \n       return <GlobalDataSummary[]>Object.values(raw);\n      }),\n      \n      catchError((error : HttpErrorResponse) => {\n        if(error.status == 404) {\n          this.date = this.date - 1;\n          this.globalDataUrl = `${this.baseURL}${this.getDate(this.month)}-${this.getDate(this.date)}-${this.year}${this.extension}`\n          console.log(this.globalDataUrl)\n          return this.getGlobalData()\n        }\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}