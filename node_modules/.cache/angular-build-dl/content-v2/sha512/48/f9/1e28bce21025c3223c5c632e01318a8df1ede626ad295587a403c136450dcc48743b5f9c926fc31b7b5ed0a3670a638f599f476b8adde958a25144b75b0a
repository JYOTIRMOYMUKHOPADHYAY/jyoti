{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/countries/countries.component.ts","webpack:///src/app/components/countries/countries.component.html","webpack:///src/app/components/dashboard-cards/dashboard-cards.component.ts","webpack:///src/app/components/dashboard-cards/dashboard-cards.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/corona-service.service.ts","webpack:///src/app/services/data-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CountriesComponent","service","countries","totalConfirmed","totalActive","totalDeaths","totalRecovered","dataTable","chart","LineChart","height","options","animation","duration","easing","is3D","getDateWiseData","pipe","result","dateWiseData","getGlobalData","data","forEach","cs","push","country","subscribe","complete","updateValues","selectedCountryData","date","cases","console","log","active","confirmed","deaths","recovered","reverse","updateChart","DashboardCardsComponent","HomeComponent","dataService","datatable","PieChart","ColumnChart","BarChart","caseType","globalData","value","next","Number","isNaN","initChart","input","MapComponent","showArrows","uparrowState","downarrowState","downarrowConfirmed","uparrowowConfirmed","downarrowActive","uparrowActive","downarrowRecovered","uparrowRecovered","downarrowDeath","uparrowDeath","showDistrict","isAscendingSort","DailystateStatus","state","DailyStatus","total","statewisedata","statewisecase","startdate","Date","lastupdateddate","lastupdated","hour","minute","second","getStateWise","testData","getDailyCaseStatus","response","sortedDataBasedOnDate","history","sortByMaxCases","calculateDiff","length","statewise","error","x","last","last2","calculate","schema1","schema2","ret","key","hasOwnProperty","obj","obj2","test","getDataStateWise","lastrefreshedtime","lastRefreshed","getDataDiff","startDate","endDate","diff","getTime","days","Math","floor","hours","minutes","seconds","day","err","getDataofState","getState","getDataDistrictWise","f","filter","a","SingleStateData","resetArrows","item","sort","b","sortAscending","sortByMaxActive","sortByMaxRecovered","sortByMaxDeath","NavbarComponent","CoronaServiceService","http","BannerData","districtdata","url_statewise","url_dailycases","ulr_districtwise","get","data1","district","districtData","providedIn","DataServiceService","baseURL","globalDataUrl","extension","dateWiseDataUrl","now","month","getMonth","getDate","year","getFullYear","responseType","rows","split","mainData","header","dates","splice","row","cols","con","index","dw","parse","raw","temp","Object","values","status","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { MapComponent} from \"./components/map/map.component\"\n\n\nconst routes: Routes = [\n\n  { path: \"\", component: HomeComponent },\n  {path: \"countries\", component: CountriesComponent },\n  {path : \"map\", component: MapComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'corona';\n}\n","\n\n<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardCardsComponent } from './components/dashboard-cards/dashboard-cards.component' ;\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { MapComponent } from './components/map/map.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardsComponent,\n    MapComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data : GlobalDataSummary[];\n  countries : string[] = [];\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  dataTable = [];\n  selectedCountryData : DateWiseData[];\n  dateWiseData;\n  chart = {\n    LineChart: \"LineChart\",\n    height : 500,\n    options : {\n      animation : {\n        duration : 1000,\n        easing : \"out\"\n      },\n      is3D: true\n    }\n  }\n \n\n  constructor(private service : DataServiceService) { }\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result =>{\n          this.dateWiseData = result;\n          \n        })\n      ),\n      this.service.getGlobalData().pipe(\n        map((result: GlobalDataSummary[])  =>{\n          this.data = result;\n          this.data.forEach(cs => {\n            this.countries.push(cs.country);\n          })\n        })\n      )\n    ).subscribe(\n      {\n        complete: () => {\n         this.updateValues(\"Afghanistan\");\n        }\n      }\n    )\n  }\n\n\nupdateChart(){\n  this.dataTable = [];\n  // dataTable.push([\"Date\", \"Cases\"])\n  this.selectedCountryData.forEach(cs => {\n    this.dataTable.push([cs.date, cs.cases])\n  })\n}\n\nupdateValues(country : string) {\n  console.log(country);\n  this.data.forEach(cs => {\n    if(cs.country == country) {\n      this.totalActive = cs.active;\n      this.totalConfirmed = cs.confirmed;\n      this.totalDeaths = cs.deaths;\n      this.totalRecovered = cs.recovered;\n    }\n  })\n\n  this.selectedCountryData = this.dateWiseData[country]\n  this.selectedCountryData.reverse()\n  this.updateChart();\n  }\n\n}","<app-navbar></app-navbar>\n  <div class=\"container-fluid\">\n   \n    <div class=\"row\">\n      <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n        <div class=\"sidebar-sticky pt-3\">\n          <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                <span data-feather=\"home\"></span>\n                Dashboard <span class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/countries\">\n                <span data-feather=\"file\"></span>\n               World \n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/map\">\n                <span data-feather=\"users\"></span>\n                India\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                <span data-feather=\"bar-chart-2\"></span>\n                Reports\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                <span data-feather=\"layers\"></span>\n                Integrations\n              </a>\n            </li>\n          </ul>\n  \n      \n        </div>\n      </nav>\n  \n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n\n          <div class=\"col\">\n             <div class=\"row\">\n                 <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)= \"updateValues(input.value)\">\n              <option value=\"{{con}}\" *ngFor=\"let con of countries\">{{ con }}</option>\n            </select>\n          </div>\n          </div>\n     \n          <div class=\"row\">\n              <app-dashboard-cards [totalConfirmed] = \"totalConfirmed\"  [totalActive] = \"totalActive\" \n          [totalRecovered] = \"totalRecovered\" [totalDeaths] = \"totalDeaths\"></app-dashboard-cards>\n         \n          </div>\n        \n          </div>\n         \n        </div>\n  \n        <google-chart [type]=\"chart.LineChart\" [data]=\"dataTable\" [height]=\"chart.height\" style=\"width: 100%\" [options]=\"chart.options\"></google-chart>\n  \n        \n     \n<div class=\"limiter\">\n  <div class=\"container-table100\">\n  <div class=\"wrap-table100\">\n  <div class=\"table100 ver1 m-b-110\">\n  <div class=\"table100-head\">\n  <table>\n  <thead>\n  <tr class=\"row100 head\">\n  <th class=\"cell100 column1\">#</th>\n  <th class=\"cell100 column2\">Date</th>\n  <th class=\"cell100 column3\">Cases</th>\n  </tr>\n  </thead>\n  </table>\n  </div>\n  <div class=\"table100-body js-pscroll\" *ngFor=\"let cs of selectedCountryData; index as i\">\n  <table>\n  <tbody>\n  <tr class=\"row100 body\" >\n  <td class=\"cell100 column1\">{{ i + 1}}</td>\n  <td class=\"cell100 column2\">{{cs.date | date}}</td>\n  <td class=\"cell100 column3\">{{cs.cases}}</td>\n  \n  </tr>\n  </tbody>\n  </table>\n  </div>\n  </div>\n  </div>\n  </div>\n  </div>\n      </main>\n    </div>\n  </div>\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-cards',\n  templateUrl: './dashboard-cards.component.html',\n  styleUrls: ['./dashboard-cards.component.css']\n})\nexport class DashboardCardsComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n\n  @Input('totalDeaths')\n  totalDeaths;\n\n  @Input('totalActive')\n  totalActive;\n\n  @Input('totalRecovered')\n  totalRecovered;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <div class=\"card\" style=\"width: 18rem;\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">Total Confirmed</h5>  \n              <h1 class=\"card-title\">{{totalConfirmed}}</h1>    \n            </div>\n          </div>\n        </div>\n        \n       <hr>\n       <div class=\"col-md-3\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Total Recovered</h5>  \n            <h1 class=\"card-title\">{{totalRecovered}}</h1>     \n          </div>\n        </div>\n        </div>\n       <hr>\n       <div class=\"col-md-3\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Total Deaths</h5> \n            <h1 class=\"card-title\">{{totalDeaths}}</h1>      \n          </div>\n        </div>\n        </div>\n       <hr>\n       <div class=\"col-md-3\">\n       <div class=\"card\" style=\"width: 18rem;\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Total Active</h5> \n          <h1 class=\"card-title\">{{totalActive}}</h1>      \n        </div>\n      </div>\n      </div>\n      </div>\n     \n    </div>\n  ","import { Component, OnInit, Input } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/global-data';\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  globalData : GlobalDataSummary[];\n  datatable = [];\n  chart = {\n    PieChart :\"PieChart\",\n    ColumnChart: \"ColumnChart\",\n   BarChart: \"BarChart\",\n    height : 500,\n    \n    options : {\n      animation : {\n        duration : 1000,\n        easing : \"out\"\n      },\n      is3D: true\n    }\n  }\n  constructor(private dataService : DataServiceService) { }\n\n\n  initChart(caseType : string) {\n\n    this.datatable = [];\n    // this.datatable.push([\"Country\", \"Cases\"]);\n\n    this.globalData.forEach(cs => {\n      let value : number ;\n      if(caseType == \"c\")\n        if(cs.confirmed > 200000) \n         value = cs.confirmed;\n      \n         console.log(caseType)\n\n      if(caseType == \"a\") \n         if(cs.active > 2000) \n       value = cs.active;\n    \n\n    if(caseType == \"d\")\n      if(cs.deaths > 20000) \n     value = cs.deaths;\n    \n \n\n  if(caseType == \"r\") \n    if(cs.recovered > 2000) \n   value = cs.recovered;\n\n\n  this.datatable.push([\n  cs.country , value\n    ]);\n   \n    })\n\n  \n  }\n\n  ngOnInit(): void {\n\n    this.dataService.getGlobalData()\n    .subscribe(\n      {\n        next : (result) => {\n          console.log(result);\n          this.globalData = result;\n          result.forEach(cs => {\n            if(!Number.isNaN(cs.confirmed)) {\n              this.totalActive += cs.active;\n              this.totalConfirmed += cs.confirmed;\n              this.totalDeaths += cs.deaths;\n              this.totalRecovered += cs.recovered;\n            }\n          \n          })\n\n          this.initChart(\"d\");\n        \n        }\n      }\n    )\n  }\n\n  updateChart(input: HTMLInputElement) {\n    console.log(input.value);\n \n    this.initChart(input.value);\n  }\n}\n","\n    <app-navbar></app-navbar>\n    <div class=\"container\">\n      <div class=\"row\">\n        <nav id=\"sidebarMenu\" class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\" style=\"background-color: #79C3ED !important;\">\n          <div class=\"sidebar-sticky pt-3\">\n            <ul class=\"nav flex-column\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link active\" href=\"#\">\n                  <span data-feather=\"home\"></span>\n                  Dashboard <span class=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"countries\">\n                  <span data-feather=\"file\"></span>\n                 World\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\"  routerLink=\"map\">\n                  <span data-feather=\"shopping-cart\"></span>\n                  India\n                </a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">\n                  <span data-feather=\"users\"></span>\n                  Customers\n                </a>\n              </li>\n            \n            </ul>\n    \n          \n          </div>\n        </nav>\n    \n        <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n          <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">Dashboard</h1>\n            <div class=\"container\">\n              \n              <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" value=\"c\" #c (click)=\"updateChart(c)\" name=\"casetype\" id=\"c\" >\n                                <label class=\"form-check-label\" for=\"c\">\n                                  Confirmed\n                                </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                   <input class=\"form-check-input\" type=\"radio\" value=\"d\" #d (click)=\"updateChart(d)\" name=\"casetype\" id=\"d\" >\n                                <label class=\"form-check-label\" for=\"d\">\n                                 Deaths\n                                </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                   <input class=\"form-check-input\" type=\"radio\" value=\"r\" #r (click)=\"updateChart(r)\" name=\"casetype\" id=\"r\" >\n                                <label class=\"form-check-label\" for=\"r\">\n                                  Recovered\n                                </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"radio\" value=\"a\" #a (click)=\"updateChart(a)\" name=\"casetype\" id=\"a\" >\n                                <label class=\"form-check-label\" for=\"a\">\n                                 Active\n                                </label>\n                </div>      \n              </div>\n            <!-- <div class=\"btn-toolbar mb-2 mb-md-0\">\n              <div class=\"btn-group mr-2\">\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Share</button>\n                <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\">Export</button>\n              </div>\n              <button type=\"button\" class=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n                <span data-feather=\"calendar\"></span>\n                This week\n              </button>\n            </div> -->\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-lg-12 col-xl-6\">\n                <google-chart [type]=\"chart.BarChart\" [data]=\"datatable\" [height]=\"chart.height\" class=\"my-4 w-100\" id=\"myChart\" width=\"100%\" height=\"100%\" [options]=\"chart.options\"></google-chart>\n              </div>\n              <div class=\"col-lg-12 col-xl-6\">\n                  <google-chart [type]=\"chart.PieChart\" [data]=\"datatable\" [height]=\"chart.height\" class=\"my-4 w-100\" id=\"myChart\" width=\"700\" height=\"380\" [options]=\"chart.options\"></google-chart>\n       \n              </div>\n            </div>\n          \n          </div>\n         \n\n             <app-dashboard-cards [totalConfirmed] = \"totalConfirmed\"  [totalActive] = \"totalActive\" \n             [totalRecovered] = \"totalRecovered\" [totalDeaths] = \"totalDeaths\"></app-dashboard-cards>\n  \n        </main>\n      </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { CoronaServiceService } from 'src/app/services/corona-service.service';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  showArrows = {\n    uparrowState: false,\n    downarrowState: false,\n    downarrowConfirmed:false,\n    uparrowowConfirmed:false,\n    downarrowActive:false,\n    uparrowActive:false,\n    downarrowRecovered:false,\n    uparrowRecovered:false,\n    downarrowDeath:false,\n    uparrowDeath:false,\n}\nshowDistrict:boolean=false\n  sortedDataBasedOnDate\n\n\n  private isAscendingSort: boolean = false;\n\n  DailystateStatus: Array<any> = [{ state: '', confirmed: '', recovered: '', deaths: '', active: '' }];\n  DailyStatus: any = { total: '' }\n  statewisedata: Array<any> = [{ state: '', confirmed: '', recovered: '', deaths: '', active: '' }];\n  statewisecase: any = { confirmed: '', active: '', recovered: '', deaths: '' }\n  startdate = new Date()\n  lastupdateddate = new Date();\n  lastupdated: any = { hour: 0, minute: 0, second: 0 }\n  SingleStateData\n  lastrefreshedtime: any;\n\n\n  constructor(private cs: CoronaServiceService) { }\n\n  ngOnInit(): void {\n\n    this.getStateWise()\n    this.testData()\n  \n  }\n\n\n\n  testData() {\n    this.cs.getDailyCaseStatus().subscribe(\n      response => {\n        this.sortedDataBasedOnDate = response.data.history\n        this.sortByMaxCases(this.sortedDataBasedOnDate)\n       \n      //  console.log(this.sortedDataBasedOnDate);\n        this.calculateDiff(this.sortedDataBasedOnDate)\n        this.statewisedata = this.sortedDataBasedOnDate[this.sortedDataBasedOnDate.length - 1].statewise\n        this.statewisecase= this.sortedDataBasedOnDate[this.sortedDataBasedOnDate.length - 1].total\n       // console.log(this.statewisecase)\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  calculateDiff(data) {\n    let x = data\n    let last: any = x[x.length - 1];\n    let last2: any = x[x.length - 2];\n\n    function calculate(schema1, schema2) {\n      var ret = {};\n      for (var key in schema1) {\n        if (schema1.hasOwnProperty(key) && schema2.hasOwnProperty(key)) {\n          var obj = schema1[key];\n          var obj2 = schema2[key]\n          if (typeof obj === \"number\" && !isNaN(obj) && typeof obj2 === \"number\" && !isNaN(obj2)) {\n            ret[key] = obj - obj2;\n          }\n          else {\n            if (typeof obj === 'object' && typeof obj2 === 'object') {\n              ret[key] = calculate(obj, obj2);\n            }\n            else {\n              ret[key] = obj;\n            }\n          }\n        }\n      }\n      return ret;\n    }\n    let test = calculate(last, last2);\n    this.DailyStatus = test;\n    this.DailystateStatus = this.DailyStatus.statewise\n  }\n\n\n\n\n\n\n\n  getStateWise() {\n    this.cs.getDataStateWise().subscribe(data => {\n    this.lastrefreshedtime=data.data.lastRefreshed   \n      this.lastupdateddate = data.data.lastRefreshed\n     // console.log(this.lastupdated)\n\n      function getDataDiff(startDate, endDate) {\n        var diff = endDate.getTime() - startDate.getTime();\n        var days = Math.floor(diff / (60 * 60 * 24 * 1000));\n        var hours = Math.floor(diff / (60 * 60 * 1000)) - (days * 24);\n        var minutes = Math.floor(diff / (60 * 1000)) - ((days * 24 * 60) + (hours * 60));\n        var seconds = Math.floor(diff / 1000) - ((days * 24 * 60 * 60) + (hours * 60 * 60) + (minutes * 60));\n        return { day: days, hour: hours, minute: minutes, second: seconds };\n      }\n\n      this.lastupdated = getDataDiff(new Date(this.lastupdateddate), new Date(this.startdate));\n      console.log(this.lastupdated)\n    },\n      err => {\n        console.log(err)\n      })\n  }\n\n  OngetState(state) {\n\n  this.getDataofState(state)\n\n    this.cs.getState(state)\n    this.cs.getDataDistrictWise(state)\n \n  }\n  getDataofState(state: any) {\n   // console.log(this.statewisedata)\n   const f = this.statewisedata.filter(a => a.state==state);\n    this.SingleStateData=f[0]\n    console.log();\n  }\n\n  showHideData(data) {\n    if(data && data['show'] == true) {\n      data['show'] = false;\n    } else {\n      data['show'] = true;\n    }\n  }\n\n  sortAscending(data) {\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowState=!this.showArrows.uparrowState\n    \n    data.forEach(item => item.statewise.sort(function (a, b) {\n      if (a.state < b.state) {\n        return -1;\n      }\n      if (a.state > b.state) {\n        return 1;\n      }\n      return 0;\n    }))\n\n\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n      this.showArrows.downarrowState=!this.showArrows.downarrowState\n      let a = data.forEach(item => item.statewise.sort(function (a, b) {\n      \n      if (b.state < a.state) {\n        return -1;\n      }\n      if (b.state > a.state) {\n        return 1;\n      }\n      return 0;\n    }))\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n  }\n  resetArrows() {\n    this.showArrows = {\n      uparrowState: false,\n      downarrowState: false,\n      downarrowConfirmed:false,\n      uparrowowConfirmed:false,\n      downarrowActive:false,\n      uparrowActive:false,\n      downarrowRecovered:false,\n      uparrowRecovered:false,\n      downarrowDeath:false,\n      uparrowDeath:false,\n  }\n    \n  }\n\n  sortByMaxCases(sortedDataBasedOnDate) {\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.downarrowConfirmed=!this.showArrows.downarrowConfirmed\n\n\n \n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n      if (b.confirmed < a.confirmed) {\n        return -1;\n      }\n      if (b.confirmed > a.confirmed) {\n        return 1;\n      }\n      return 0;\n    }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n     this.showArrows.uparrowowConfirmed=!this.showArrows.uparrowowConfirmed\n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (a.confirmed < b.confirmed) {\n          return -1;\n        }\n        if (a.confirmed > b.confirmed) {\n          return 1;\n        }\n        return 0;\n      }))\n\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n  }\n\n  sortByMaxActive(sortedDataBasedOnDate) {\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowActive=!this.showArrows.uparrowActive\n   \n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n      if (a.active < b.active) {\n        return -1;\n      }\n      if (a.active > b.active) {\n        return 1;\n      }\n      return 0;\n    }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n     this.showArrows.downarrowActive=!this.showArrows.downarrowActive\n\n      sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (b.active < a.active) {\n          return -1;\n        }\n        if (b.active > a.active) {\n          return 1;\n        }\n        return 0;\n      }))\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n\n  }\n\n  sortByMaxRecovered(sortedDataBasedOnDate) {\n\n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowRecovered=!this.showArrows.uparrowRecovered\n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n      if (b.recovered < a.recovered) {\n        return -1;\n      }\n      if (b.recovered > a.recovered) {\n        return 1;\n      }\n      return 0;\n    }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n\n      this.resetArrows()\n     this.showArrows.downarrowRecovered=!this.showArrows.downarrowRecovered\n      sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (a.recovered < b.recovered) {\n          return -1;\n        }\n        if (a.recovered > b.recovered) {\n          return 1;\n        }\n        return 0;\n      }))\n\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n\n  }\n\n  sortByMaxDeath(sortedDataBasedOnDate) {\n    \n    this.resetArrows()\n    this.isAscendingSort = !this.isAscendingSort;\n   this.showArrows.uparrowDeath=!this.showArrows.uparrowDeath\n    sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n     \n    if (a.deaths < b.deaths) {\n      return -1;\n    }\n    if (a.deaths > b.deaths) {\n      return 1;\n    }\n    return 0;\n  }))\n    this.calculateDiff(this.sortedDataBasedOnDate)\n\n    if (!this.isAscendingSort) {\n      this.resetArrows()\n         this.showArrows.downarrowDeath=!this.showArrows.downarrowDeath\n      sortedDataBasedOnDate.forEach(item => item.statewise.sort(function (a, b) {\n        if (b.deaths < a.deaths) {\n          return -1;\n        }\n        if (b.deaths > a.deaths) {\n          return 1;\n        }\n        return 0;\n      }))\n  \n  \n\n      this.calculateDiff(this.sortedDataBasedOnDate)\n    }\n\n  }\n}\n","\n<div class=\"limiter\">\n    <div class=\"container-table100\">\n        <a href=\"/\" class=\"btn btn-secondary\"> <i class=\"fas fa-arrow-circle-left\"></i> Go Back</a>\n        <div class=\"container\" style=\"animation-delay: 3s; \">\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <h5>Confirmed</h5>\n                    <h4 class=\"text-warning\">[+{{DailyStatus.total.confirmed}}]</h4>\n                    <h1>{{statewisecase.confirmed}} </h1>\n                </div>\n                <div class=\"col-md-3\">\n                    <h5 class=\"heading \">Active</h5>\n                    <h4 class=\"text-white\">[+{{DailyStatus.total.active}}]</h4>\n                    <h1 class=\"title has-text-info \">{{statewisecase.active}}</h1>\n                </div>\n                <div class=\"col-md-3\">\n                    <h5 class=\"heading \">Recovered</h5>\n                    <h4  class=\"text-white\">[+{{DailyStatus.total.recovered}}]</h4>\n                    <h1 class=\"title has-text-success \">{{statewisecase.recovered}} </h1>\n                </div>\n                <div class=\"col-md-3\">\n                    <h5 class=\"heading \">Death</h5>\n                    <h4  class=\"text-warning\">[+{{DailyStatus.total.deaths}}]</h4>\n                    <h1 class=\"title has-text-grey \">{{statewisecase.deaths}}</h1>\n                </div>\n                <div class=\"pt-5\">\n                    <h5 class=\"affected-count fadeInUp \" style=\"animation-delay: 1s; \">28 States/UTS Affected</h5>\n              </div>\n            </div>\n\n        </div>\n\n       \n     \n<div class=\"wrap-table100\">\n    <div class=\"table100\">\n        <table style=\"animation-delay: 1s; \">\n            <thead>\n                <tr class=\"table100-head\">\n                    <th (click)=\"sortAscending(sortedDataBasedOnDate) \" class=\"column1 text-center\">\n                        <div class=\"heading-content \"><abbr title=\"State \">State/UT</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowState , 'up-arrow' : showArrows.uparrowState} \"></div>\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxCases(sortedDataBasedOnDate) \" class=\"column2 text-center\">\n                        <div class=\"heading-content \"><abbr class=\"confirmed \" title=\"Confirmed \">Confirm</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowConfirmed , 'up-arrow' : showArrows.uparrowowConfirmed} \"></div>\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxActive(sortedDataBasedOnDate) \" class=\"column3 text-center\">\n                        <div class=\"heading-content \"><abbr class=\"active-cases \" title=\"Active \">Active</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowActive , 'up-arrow' : showArrows.uparrowActive} \"></div>\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxRecovered(sortedDataBasedOnDate) \" class=\"column4 text-center\">\n                        <div class=\"heading-content \"><abbr class=\" recovered\" title=\"Recovered \">Recover</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowRecovered , 'up-arrow' : showArrows.uparrowRecovered} \"></div>\n\n                        </div>\n                    </th>\n                    <th (click)=\"sortByMaxDeath(sortedDataBasedOnDate) \" class=\"column5 text-center\">\n                        <div class=\"heading-content \"><abbr class=\"death\" title=\"Deaths \">Death</abbr>\n                            <div class=\"\" [ngClass]=\" { 'downarrow':showArrows.downarrowDeath , 'up-arrow' : showArrows.uparrowDeath} \"></div>\n                        </div>\n                    </th>\n                    <th class=\"column6 text-center\">Last Update</th>\n                </tr>\n            </thead>\n\n\n            <tbody *ngFor=\"let data of statewisedata;let i=index \">\n                <span class=\"dropdown rotateDownRight \"><svg xmlns=\"http://www.w3.org/2000/svg \" width=\"24 \" height=\"24 \" viewBox=\"0 0 24 24 \" fill=\"none \" stroke=\"currentColor \" stroke-width=\"2 \" stroke-linecap=\"round \" stroke-linejoin=\"round\n                        \"><polyline points=\"6 9 12 15 18 9 \"></polyline></svg></span>\n\n                <tr>\n                    <td (click)=\"OngetState(data.state); showHideData(data) \" class=\"column1\">{{data.state}}</td>\n\n\n\n\n                    <td class=\"column2\">\n\n                        <span *ngIf='DailystateStatus[i].confirmed !==0 && DailystateStatus[i].confirmed > 0 ;' class=\"deltas \" style=\"color: rgb(255, 7, 58); \"><svg xmlns=\"http://www.w3.org/2000/svg \" width=\"24 \" height=\"24 \" viewBox=\"0 0 24 24\n                        \" fill=\"none \" stroke=\"currentColor \" stroke-width=\"2 \" stroke-linecap=\"round \" stroke-linejoin=\"round \"><line x1=\"12 \" y1=\"19 \" x2=\"12 \" y2=\"5 \"></line><polyline points=\"5 12 12 5 19 12 \"></polyline>\n                                </svg>    {{DailystateStatus[i].confirmed}}</span> {{data.confirmed}}\n                    </td>\n\n\n                    <td class=\"column3 text-center\">{{data.active}}</td>\n                    <td class=\"column4 text-center\">{{data.recovered}}</td>\n                    <td class=\"column5 text-center\">{{data.deaths}}</td>\n                    <td class=\"column5 text-center\">\n                        <div class=\"last-update col-md-5 align-center\">\n                        \n                            <p class=\"difference-time\" style=\" color: #0bb332fa; font-weight: 600; \" *ngIf='lastupdated.hour==0; else elseBlock'> {{lastupdated.minute}} minutes </p>\n                            <ng-template #elseBlock>{{lastupdated.hour}} hour {{lastupdated.minute}} minutes ago</ng-template>\n                           \n                        </div>\n                    </td>\n\n                </tr>\n\n\n                <tr class=\"nohover\" app-district *ngIf=\"data[ 'show'] \"></tr>\n\n            </tbody>\n\n        </table>\n\n        </div>\n        </div>\n       \n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n\n\n    <nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n      <a class=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"/\">Home</a>\n      <button class=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n      <ul class=\"navbar-nav px-3\">\n        <li class=\"nav-item text-nowrap\">\n          <a class=\"nav-link\" href=\"#\">Sign out</a>\n        </li>\n      </ul>\n    </nav>\n    ","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoronaServiceService {\n\n  data1\n  state\n  district\n  BannerData: BehaviorSubject<any> = new BehaviorSubject('')\n  districtdata: Subject<any> = new Subject<any>();\n\n  url_statewise = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise'\n  url_dailycases = 'https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise/history'\n  ulr_districtwise = \"https://api.covid19india.org/state_district_wise.json\"\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n\n    this.getDataStateWise()\n    \n  }\n\n  getDataStateWise(): Observable<any> {\n    return this.http.get(this.url_statewise)\n  }\n\n getDailyCaseStatus(): Observable<any> {\n    return this.http.get(this.url_dailycases)\n  }\n\n  getState(state) {\n    this.state = state\n  }\n\n  getDataDistrictWise(state) {\n    this.http.get(this.ulr_districtwise).subscribe(data => {\n      this.data1 = data\n    //  console.log(this.data1)\n    //  console.log(this.data1[state])\n      this.district = this.data1[state].districtData\n    //  console.log(state)\n      this.districtdata.next(this.district)\n    }\n    )\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators'; \nimport { GlobalDataSummary } from '../models/global-data';\nimport { DateWiseData } from '../models/date-wise-data';\nimport { chainedInstruction } from '@angular/compiler/src/render3/view/util';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n    private baseURL = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/\";\n    private  globalDataUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/\";\n    private extension = \".csv\"\n    private dateWiseDataUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\n    month;\n    date;\n    year;\n\n    getDate(date : number){\n      if(date < 10) {\n        \n        return '0' + date;\n      }\n      return date;\n    }\n\n\n  constructor(private http : HttpClient ) { \n    let now = new Date();\n    this.month = now.getMonth() + 1;\n    this.date = now.getDate() ;\n    this.year = now.getFullYear();\n\n    console.log({\n      date : this.date,\n      month : this.month,\n      year : this.year\n    })\n    \n    this.globalDataUrl = `${this.globalDataUrl}${this.getDate(this.month)}-${this.getDate(this.date)}-${this.year}${this.extension}`\n    console.log(this.globalDataUrl)\n  }\n\n  getDateWiseData() {\n    return this.http.get(this.dateWiseDataUrl, {responseType : \"text\"})\n    .pipe(map(result => {\n      let rows = result.split('\\n');\n      \n      let mainData = {};\n      let header = rows[0]\n      let dates = header.split(/,(?=\\S)/);\n      \n      dates.splice(0, 4);\n      rows.splice(0, 1)\n\n     rows.forEach(row => {\n       let cols = row.split(/,(?=\\S)/);\n       let con = cols[1];//\n       cols.splice(0, 4);\n       mainData[con] = [];\n       cols.forEach((value , index) => {\n         let dw : DateWiseData = {\n           cases: +value,\n           country : con,\n           date : new Date(Date.parse(dates[index]))\n         }\n         mainData[con].push(dw)\n       })\n     })\n    //  console.log(mainData)\n      return mainData;\n    }))\n   }\n  getGlobalData() {\n    return this.http.get(this.globalDataUrl, {responseType : 'text'}).pipe(\n      map(result => {\n        let data: GlobalDataSummary[] = [];\n        let raw = {}\n        let rows = result.split('\\n');\n        rows.splice(0, 1)\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n        \n          let cs = {\n            country : cols[3],\n            confirmed : +cols[7],\n            deaths : +cols[8],\n            recovered : +cols[9],\n             active : +cols[10]\n          };\n          let temp : GlobalDataSummary = raw[cs.country];\n          if(temp){\n            temp.active = cs.active + temp.active;\n            temp.confirmed = cs.confirmed + temp.confirmed\n            temp.deaths = cs.deaths + temp.deaths\n            temp.recovered = cs.recovered + temp.recovered\n          \n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n        \n        })\n       \n       return <GlobalDataSummary[]>Object.values(raw);\n      }),\n      \n      catchError((error : HttpErrorResponse) => {\n        if(error.status == 404) {\n          this.date = this.date - 1;\n          this.globalDataUrl = `${this.baseURL}${this.getDate(this.month)}-${this.getDate(this.date)}-${this.year}${this.extension}`\n          console.log(this.globalDataUrl)\n          return this.getGlobalData()\n        }\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}